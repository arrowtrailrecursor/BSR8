<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PowerShellScript" xml:space="preserve">
    <value>#USE THE FORCE STARWARS
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned
$in = (Get-Variable MyInvocation).Value
$dp = Split-Path $in.MyCommand.Path
cd $dp
Write-Output "Executing Command @BSRCMD@"
powershell -command "@BSRCMD@"|Out-File ./BlackShellRunnerOut</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="LNK" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\imageres_163.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="BSRbtnHideShow" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BSRbtnHideShow.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="BSRInfo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BSR_INF.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="PowerShellBatch" xml:space="preserve">
    <value>@ECHO ON
PowerShell.exe -NoProfile -Command "&amp; {Start-Process PowerShell.exe -ArgumentList '-NoProfile -ExecutionPolicy RemoteSigned -File ""%~dpn0.ps1""' -Verb RunAs}</value>
  </data>
  <data name="BSR_PIC" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BSR_PIC.zip;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="PSCmds" xml:space="preserve">
    <value>%
?
A:
ac
Add-Computer
Add-Content
Add-History
Add-Member
Add-PSSnapin
Add-Type
asnp
B:
C:
cat
cd
cd..
cd\
chdir
Checkpoint-Computer
clc
clear
Clear-Content
Clear-EventLog
Clear-History
Clear-Host
Clear-Item
Clear-ItemProperty
Clear-Variable
clhy
cli
clp
cls
clv
compare
Compare-Object
Complete-Transaction
Connect-WSMan
ConvertFrom-Csv
ConvertFrom-SecureString
ConvertFrom-StringData
Convert-Path
ConvertTo-Csv
ConvertTo-Html
ConvertTo-SecureString
ConvertTo-Xml
copy
Copy-Item
Copy-ItemProperty
cp
cpi
cpp
cvpa
D:
dbp
Debug-Process
del
diff
dir
Disable-ComputerRestore
Disable-PSBreakpoint
Disable-PSRemoting
Disable-PSSessionConfiguration
Disable-WSManCredSSP
Disconnect-WSMan
E:
ebp
echo
Enable-ComputerRestore
Enable-PSBreakpoint
Enable-PSRemoting
Enable-PSSessionConfiguration
Enable-WSManCredSSP
Enter-PSSession
epal
epcsv
epsn
erase
etsn
Exit-PSSession
Export-Alias
Export-Clixml
Export-Console
Export-Counter
Export-Csv
Export-FormatData
Export-ModuleMember
Export-PSSession
exsn
F:
fc
fl
foreach
ForEach-Object
Format-Custom
Format-List
Format-Table
Format-Wide
ft
fw
G:
gal
gbp
gc
gci
gcm
gcs
gdr
Get-Acl
Get-Alias
Get-AuthenticodeSignature
Get-ChildItem
Get-Command
Get-ComputerRestorePoint
Get-Content
Get-Counter
Get-Credential
Get-Culture
Get-Date
Get-Event
Get-EventLog
Get-EventSubscriber
Get-ExecutionPolicy
Get-FormatData
Get-Help
Get-History
Get-Host
Get-HotFix
Get-Item
Get-ItemProperty
Get-Job
Get-Location
Get-Member
Get-Module
Get-PfxCertificate
Get-Process
Get-PSBreakpoint
Get-PSCallStack
Get-PSDrive
Get-PSProvider
Get-PSSession
Get-PSSessionConfiguration
Get-PSSnapin
Get-Random
Get-Service
Get-TraceSource
Get-Transaction
Get-UICulture
Get-Unique
Get-Variable
Get-Verb
Get-WinEvent
Get-WmiObject
Get-WSManCredSSP
Get-WSManInstance
ghy
gi
gjb
gl
gm
gmo
gp
gps
group
Group-Object
gsn
gsnp
gsv
gu
gv
gwmi
h
H:
help
history
I:
icm
iex
ihy
ii
Import-Alias
Import-Clixml
Import-Counter
Import-Csv
Import-LocalizedData
Import-Module
Import-PSSession
ImportSystemModules
Invoke-Command
Invoke-Expression
Invoke-History
Invoke-Item
Invoke-WmiMethod
Invoke-WSManAction
ipal
ipcsv
ipmo
ipsn
ise
iwmi
J:
Join-Path
K:
kill
L:
Limit-EventLog
lp
ls
M:
man
md
measure
Measure-Command
Measure-Object
mi
mkdir
more
mount
move
Move-Item
Move-ItemProperty
mp
mv
N:
nal
ndr
New-Alias
New-Event
New-EventLog
New-Item
New-ItemProperty
New-Module
New-ModuleManifest
New-Object
New-PSDrive
New-PSSession
New-PSSessionOption
New-Service
New-TimeSpan
New-Variable
New-WebServiceProxy
New-WSManInstance
New-WSManSessionOption
ni
nmo
nsn
nv
O:
ogv
oh
Out-Default
Out-File
Out-GridView
Out-Host
Out-Null
Out-Printer
Out-String
P:
popd
Pop-Location
prompt
ps
pushd
Push-Location
pwd
Q:
r
R:
rbp
rcjb
rd
rdr
Read-Host
Receive-Job
Register-EngineEvent
Register-ObjectEvent
Register-PSSessionConfiguration
Register-WmiEvent
Remove-Computer
Remove-Event
Remove-EventLog
Remove-Item
Remove-ItemProperty
Remove-Job
Remove-Module
Remove-PSBreakpoint
Remove-PSDrive
Remove-PSSession
Remove-PSSnapin
Remove-Variable
Remove-WmiObject
Remove-WSManInstance
ren
Rename-Item
Rename-ItemProperty
Reset-ComputerMachinePassword
Resolve-Path
Restart-Computer
Restart-Service
Restore-Computer
Resume-Service
ri
rjb
rm
rmdir
rmo
rni
rnp
rp
rsn
rsnp
rv
rvpa
rwmi
S:
sajb
sal
saps
sasv
sbp
sc
select
Select-Object
Select-String
Select-Xml
Send-MailMessage
set
Set-Acl
Set-Alias
Set-AuthenticodeSignature
Set-Content
Set-Date
Set-ExecutionPolicy
Set-Item
Set-ItemProperty
Set-Location
Set-PSBreakpoint
Set-PSDebug
Set-PSSessionConfiguration
Set-Service
Set-StrictMode
Set-TraceSource
Set-Variable
Set-WmiInstance
Set-WSManInstance
Set-WSManQuickConfig
Show-EventLog
si
sl
sleep
sort
Sort-Object
sp
spjb
Split-Path
spps
spsv
start
Start-Job
Start-Process
Start-Service
Start-Sleep
Start-Transaction
Start-Transcript
Stop-Computer
Stop-Job
Stop-Process
Stop-Service
Stop-Transcript
Suspend-Service
sv
swmi
T:
TabExpansion
tee
Tee-Object
Test-ComputerSecureChannel
Test-Connection
Test-ModuleManifest
Test-Path
Test-WSMan
Trace-Command
type
U:
Undo-Transaction
Unregister-Event
Unregister-PSSessionConfiguration
Update-FormatData
Update-List
Update-TypeData
Use-Transaction
V:
W:
Wait-Event
Wait-Job
Wait-Process
where
Where-Object
wjb
write
Write-Debug
Write-Error
Write-EventLog
Write-Host
Write-Output
Write-Progress
Write-Verbose
Write-Warning
X:
Y:
Z:</value>
  </data>
  <data name="MSDOSCmds" xml:space="preserve">
    <value>ASSOC
ATTRIB
BREAK
BCDEDIT
CACLS
CALL
CD
CHCP
CHDIR
CHKDSK
CHKNTFS
CLS
CMD
COLOR
COMP
COMPACT
CONVERT
COPY
DATE
DEL
DIR
DISKCOMP
DISKCOPY
DISKPART
DOSKEY
DRIVERQUERY
ECHO
ENDLOCAL
ERASE
EXIT
FC
FIND
FINDSTR
FOR
FORMAT
FSUTIL
FTYPE
GOTO
GPRESULT
GRAFTABL
HELP
ICACLS
IF
LABEL
MD
MKDIR
MKLINK
MODE
MORE
MOVE
OPENFILES
PATH
PAUSE
POPD
PRINT
PROMPT
PUSHD
RD
RECOVER
REM
REN
RENAME
REPLACE
RMDIR
ROBOCOPY
SET
SETLOCAL
SC
SCHTASKS
SHIFT
SHUTDOWN
SORT
START
SUBST
SYSTEMINFO
TASKLIST
TASKKILL
TIME
TITLE
TREE
TYPE
VER
VERIFY
VOL
XCOPY
WMIC</value>
  </data>
  <data name="BSRbtnSel" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BSRbtnSel.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="BSRError" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BSR_ERR.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="BSRbtnClose" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\BSRbtnClose.wav;System.IO.MemoryStream, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="ICO" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\moricons_96.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="EXE" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\imageres_15.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="CUR" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\shell32_187.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PiratesGreen" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\PiratesGreen.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Roulette_Dares" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Roulette_Dares.mid;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="BSRVBS" xml:space="preserve">
    <value>Set WshShell = CreateObject("WScript.Shell") 
WshShell.Run chr(34) &amp; "BSRPath" &amp; Chr(34), 0 
Set WshShell = Nothing</value>
  </data>
</root>