<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAA
        gAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAA
        gAAAgAAAgAAAgAAAgAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA/wAAAAAAgAAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAAgAAAAAAAAAAAAAAAAAAAAAAA
        AAAA/wAAAAAAAAAAAAAA/wAA/wAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA/wAAgAAAAAAAAAAAAAAAAAAAAAAAAAAA/wCAgIBMTEyAgIAA/wAAAAAAgAAA/wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA/4AA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAACA/wCA/wCA
        /wAAAAAAAAAAAAAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgAAA/wAAAAAAAACA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA
        /4CA/4CA/4CA/4CA/4CA/4CA/4AAAAAAAAAAAAAAAAAAAAAAAAAAAACA/4AA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wAA/wAA/wAA/wAA/wAA/wAAAAAAgAAA/wAAAAAAAAAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAgAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAA/wAA/wAAgAAA/wAAAAAA
        AAAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAAAAAAAAAAAAAAAAAA/wCAgIBMTExM
        TExMTEyAgIAA/wAAAAAAAAAAgAAA/wAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAACA/4AA
        /wAAAAAAAAAAAAAAAAAAAACA/wCA/wCA/wCA/wCA/wAAAAAAAAAAAAAAgAAA/wAAAAAAAAAA/wAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAA/wAAAAAAAAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAAAAAAAAAA
        AAAAAAAAAAAAAACA/4AA/wAAAAAAAAAAAADe4eQA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAAAAAAgAAA
        /wAAAAAAAAAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAAAAAAAAAA/wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA/wAA/wAAgAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAAAAAAAAAAAAAAAAAAAAAA
        AAAA/wAAgAAAAAAAAAAA/wCAgIBMTEwzMzMzMzMzMzMzMzOAgIAA/wAAAAAAAAAAgAAA/wAAAAAAAACA
        /4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA
        /4CA/4CA/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAD//vyA/wCA/wCA/wCA/wCA/wCA/wCA
        /wAAAAAAAAAAAAAAgAAA/wAAAAAAAAAAAAAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAAAAAA/wBMTExMTEwA/wAAAAAAAAAA/wAAgAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM
        TEwA/wAA/wBMTEwAAAAAAAAA/wAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEwA/wAA/wBMTEwAAAAAAACA/4AA/wAAgAAAAAAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAAAAAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wBMTExMTEwA/wAa
        GhoAAAAAAAAA/wAAgAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAAgAAA/wAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAgAAA/wCAgIBMTExMTExMTExMTExMTExM
        TExMTEyAgIAA/wAAAAAAAAAAgAAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        gAAAAACA/wCA/wCA/wCA/wCA/wCA/wCA/wCA/wCA/wAAAAAAAAAAAAAAAACA/4CA/4CA/4CA/4CA/4CA
        /4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA
        /4CA/4CA/4CA/4CA/4CA/4CA/4CA/4CA/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAPwA
        AAAAfwAAhAAAAAA/AAAAAAAAAD8AAAQAAAAAPwAAjgAAAAAfAAD+AAAAAB8AAP8AAAAAHwAAgQAAAAAP
        AAAAAAAAAA8AAAGAAAAADwAAg4AAAAAHAAD/gAAAAAcAAP/AAAAABwAAAEAAAAADAAAAAAAAAAMAAABg
        AAAAAwAAAOAAAAABAAD/4AAAAAEAAP/wAAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAgDwAAAAA
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>